#python -m pip install python-dotenv
#python -m pip install langchain
#pip install langchain-community langchain-core
#pip install pandas
#pip install langfuse
#pip install openai
#AIzaSyChrH9XNfsk27qdKqy4KjbqyMrjnc3DRpQ
#mm7522
#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
#marija.marolt13
#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


import os
from dotenv import load_dotenv

# --- LOAD ENVIRONMENT VARIABLES FIRST ---
print("Attempting to load .env file...")
dotenv_path = load_dotenv(verbose=True, override=True)
if dotenv_path:
    print(f".env file loaded from: {dotenv_path}")
else:
    print(f"WARNING: .env file not found. Current CWD: {os.getcwd()}")

# --- CHECK THE KEY IMMEDIATELY AFTER LOADING ---
loaded_openai_key = os.environ.get("OPENAI_API_KEY")
print(f"OPENAI_API_KEY from os.environ after load_dotenv: '{'SET' if loaded_openai_key else 'NOT SET (None or empty)'}'")
if not loaded_openai_key:
    print("CRITICAL ERROR: OPENAI_API_KEY is not loaded into the environment. API calls will fail.")
    print("Please ensure your .env file is correct and in the right location, then RESTART THE KERNEL.")
    # You might want to exit or raise an error here if the key is critical
    # raise ValueError("OPENAI_API_KEY not found. Halting execution.")
# --- END OF ENV VAR CHECK ---